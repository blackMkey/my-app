# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
orbs:
  aws-eks: circleci/aws-eks@2.2.0
  kubernetes: circleci/kubernetes@1.3
  aws-ecr: circleci/aws-ecr@8.1.2
jobs:
  build:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [nodeModules]
      - run:
          name: Build App
          command: |
            npm install
      - save_cache:
          paths: [node_modules]
          key: nodeModules
  #---------------------------------------------------------------------------------------------
  #---------------------------------------------------------------------------------------------
  test:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [nodeModules]
      - run: |
          npm install
          npm run test 
  #---------------------------------------------------------------------------------------------
  #---------------------------------------------------------------------------------------------
  upload-docker:
    docker:
      - image: circleci/golang:1.15
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.14
      - run:
          name: Build docker image
          command: |
            docker build --tag=$DOCKER_IMAGE_NAME .
      - run:
          name: Push Docker Image
          command: |
            echo "Docker ID and Image: $DOCKER_IMAGE_NAME"
            docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
            docker tag $DOCKER_IMAGE_NAME $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_WORKFLOW_ID
            docker push $DOCKER_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_WORKFLOW_ID

workflows:
  capstone-workflow:
    jobs:
      # - build
      # - test:
      #     requires: [build]
      # - upload-docker:
      #     requires: [test]
      - aws-ecr/build-and-push-image:
          name: build-and-push-image-ecr
          registry-id: AWS_ECR_REGISTRY_ID
          region: ${AWS_DEFAULT_REGION}
          repo: capstone_app
          tag: ${CIRCLE_WORKFLOW_ID:0:7}